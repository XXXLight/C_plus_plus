#include<bits/stdc++.h>
#include<typeinfo>
#include<iostream>
#include<string>
using namespace std;


void insertion_sort(vector<int>&nums) {
	for (int j = 1; j < nums.size(); j++) {
		int key = nums[j];
		int i = j - 1;
		while (i >= 0 && nums[i] > key) {
			nums[i + 1] = nums[i];
			i=i-1;
		}
		nums[i + 1] = key;
	}
}

void merge(int *a, int p, int q, int r) {
	int n1 = q - p + 1;
	int n2 = r - q;
	int *L = new int[n1 + 1];
	int *R = new int[n2 + 1];
	for (int i = 0; i < n1; i++) L[i] = a[p + i];
	for (int i = 0; i < n1; i++) cout<<L[i]<<" ";
	cout << endl;
	for (int j = 0; j < n2; j++) R[j] = a[q + j+1];
	for (int j = 0; j < n2; j++) cout << R[j] << " ";
	cout << endl;
	L[n1] = INT_MAX;
	R[n2] = INT_MAX;
	int i = 0, j = 0;
	for (int k = p; k <=r; k++) {
		if (L[i] <= R[j]) {
			a[k] = L[i];
			i++;
		}
		else {
			a[k] = R[j];
			j++;
		}
	}
	for (int k = p; k <= r; k++) cout << a[k] << " ";
	cout << endl;
	delete []L;
	delete []R;
}
void merge_sort(int *a, int p, int r) {
	if (p < r) {
		int q = (p + r) / 2;
		merge_sort(a, p, q);
		merge_sort(a, q + 1, r);
		merge(a, p, q, r);
	}
}
int main() {
	int  nums[9] = { 3,2,5,6,7,1,8,9,0 };
	merge_sort(nums, 0,8);
	return 0;
}